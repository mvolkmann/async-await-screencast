Screencast outline

"async" and "await" are two new keywords being added to JavaScript in ES2017.
They make it much easier to work with functions that return promises.
They can be used today in browsers by utilizing Babel
and they are enabled by default in Node v7.6 and above.

Promises represent a value that may be available in the future.
A promise can be resolved or rejected.
In general, a promise is resolved when things go right
and rejected when things go wrong.

Here's an example of code that uses promises directly
by chaining calls to "then" and "catch".
It uses the Fetch API which has methods that return promises.
The Fetch API is commonly used to make REST calls
from client side web app code.
The same technique would apply to any functions that return promises.

Here's the same example using the new "async" and "await" keywords.
Note how all the calls to functions that return promises
are inside a try block preceded by the await keyword,
and errors from them are handled in the catch block.

The "await" keyword can be applied to any function call,
even ones that do not return promises.
This allows functions that previous returned a promise
to be changed to return an ordinary value
without breaking existing callers.

Note how this makes writing asynchronous code
look similar to writing synchronous code.

Here are few questions you might have.

What happens if await is used inside a function that is not marked as async?
You'll get a SyntaxError.

What happens if you call a function marked as async that returns a promise
without using await?
It just returns the promise object
without waiting for it to resolve or reject.

What happens if you call a function using await,
but the function is not marked as async?
It returns its value immediately.

Which kinds of functions can be marked as async?
This works with regular functions and arrow functions,
but methods cannot be marked as async.

My recommendation to is to
search your code for calls to "then" and "catch" and
replace all of them with use of "async" and "await".
It will make your code much easier to read!

You can find all the code demoed here at
https://github.com/mvolkmann/async-await-screencast
